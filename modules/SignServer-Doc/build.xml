<?xml version="1.0" encoding="UTF-8"?>
<!-- Version: $Id: tests.xml 1791 2011-07-07 15:43:05Z netmackan $ -->
<project name="SignServer-Doc" default="build" basedir=".">
    <property file="nbproject/project.properties"/>
    <import file="../modules.xml"/>

    <target name="build" depends="doc"/>
    
    <target name="clean">
        <delete file="velocity.log" />
        <delete dir="${docs.dest}"/>
        <delete dir="${tmp}"/>
    </target>

    <!-- =================================================================== -->
    <!-- Documentation part                                                  -->
    <!-- =================================================================== -->

    <target name="prepare">
        <path id="anakia.classpath">
            <fileset dir="../../lib/ext/ext/">
               <include name="activation.jar"/> 
               <include name="jdom-b9.jar"/>
               <include name="nekohtml.jar"/>
               <include name="velocity-dep-1.4.jar"/>
               <include name="xml-apis.jar"/>
            </fileset>
        </path>
        <available classname="org.apache.velocity.anakia.AnakiaTask"
                   property="AnakiaTask.present">
            <classpath refid="anakia.classpath"/>
        </available>
        <path id="xmltask.classpath">
            <fileset dir="../../lib/ext/ext/">
                <include name="xmltask.jar"/>
            </fileset>
        </path>
        <available classname="com.oopsconsultancy.xmltask.ant.XmlTask"
                   property="XmlTask.present">
            <classpath refid="xmltask.classpath"/>
        </available>
    </target>

    <target depends="prepare" name="prepare-error" unless="AnakiaTask.present">
        <echo>
            AnakiaTask is not present! Please check to make sure that
            velocity.jar is in your classpath.
        </echo>
        <mkdir dir="${docs.dest}"/>
    </target>

    <target name="doc:splitmanual" depends="prepare-error">

        <mkdir dir="${docs.singlepages}/manual"/>
        <copy todir="${docs.singlepages}/stylesheets">
            <fileset dir="${templ.path}"/>
        </copy>

        <!-- Split full.xml into xml-files for each chapter -->
        <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask">
            <classpath refid="xmltask.classpath"/>
        </taskdef>

        <!-- call subtargets using the full manual as the driver -->
        <xmltask source="${docs.fullmanual}">
          <call path="/document/body/chapter" target="doc:splitmanual:singlepage" buffer="chapter_buffer" inheritAll="true">
            <param name="1" path="@name"/>
            <param name="2" path="@shortname"/>
            <param name="3" value="${os.name}"/>
            <param name="4" path="node()"/>
          </call>
        </xmltask>
    </target>

    <target name="doc:splitmanual:singlepage">
        <xmltask dest="${docs.singlepages}/manual/${2}.xml">
          <insert path="/">
            <![CDATA[
              <document>
                <properties>
                    <title/>
                    <singlepage value="true"/>
                </properties>
                <body/>
              </document>
            ]]>
          </insert>
          <insert path="/document/properties/title">${1}</insert>
          <insert path="/document/body" buffer="chapter_buffer" position="under"/>
        </xmltask>
    </target>

    <target name="doc" if="AnakiaTask.present" depends="prepare-error, -copy-timemonitor, doc:splitmanual" description="Build SignServer web site and docs">
        <taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask">
            <classpath refid="anakia.classpath"/>
        </taskdef>

        <!-- Use FOP for creating PDF-files -->
        <!--<property name="fop.home" value="lib/ext/fop/"/>
        <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
	  <classpath>
	    <fileset dir="${fop.home}/lib">
	      <include name="*.jar"/>
	    </fileset>
	    <fileset dir="${fop.home}/build">
	      <include name="fop.jar"/>
	      <include name="fop-hyph.jar" />
	    </fileset>
	  </classpath>
	</taskdef>-->

        <echo level="verbose">
            Anakia variables:
            docs.src:     ${docs.src}
            docs.dest:    ${docs.dest}
            project.file: ${project.file}
            include.xml:  ${include.xml}
            templ.path:   ${templ.path}
        </echo>

        <anakia basedir="${docs.src}" destdir="${docs.dest}"
             extension=".html" style="./site.vsl"
             projectFile="${project.file}"
             excludes="**/stylesheets/**"
             includes="${include.xml}"
             lastModifiedCheck="true"
             templatePath="${templ.path}">
        </anakia>

        <!-- Also for manual singlepages -->
        <anakia basedir="${docs.singlepages}" destdir="${docs.dest}"
             extension=".html" style="./site.vsl"
             projectFile="${project.file}"
             excludes="**/stylesheets/**"
             includes="${include.xml}"
             lastModifiedCheck="true"
             templatePath="${templ.path}">
        </anakia>
        
        <copy todir="${docs.dest}">
        	<fileset dir="${docs.src}" includes="**/*.css,**/*.png,**/*.jpg,**/*.gif"/>        	
        	<fileset dir="${docs.src}" includes="docs/**/*"/>
        </copy>
    	<echo message=""/>
        <property name="docs.dest.path" location="${docs.dest}"/>
    	<echo message="Local documentation is now available in file://${docs.dest.path}/index.html"/>
    </target>

    <!-- Copies the TimeMonitor manual (PDF). Temporarly solution until it is incorporated in the xdoc manual. -->
    <target name="-copy-timemonitor">
        <copy todir="${docs.src}/docs/">
            <fileset dir="../../doc/">
                <include name="TimeMonitor-Manual.pdf"/>
            </fileset>
        </copy>
    </target>

    <target name="site:test:publish" depends="doc" description="Publish the website to the sandbox subdirectory.">
    	<property name="publish.dir" value="/home/project-web/signserver/htdocs/sandbox"/>
        <property name="publish.host" value="shell.sourceforge.net"/>

        <echo message="Publish to ${publish.host}:${publish.dir}"/>
        <input message="Please enter username: " addproperty="username"/>
        <input message="Please enter password: " addproperty="password"/>
    	<tar destfile="htdocs.tgz" compression="gzip">
    		<tarfileset dir="${docs.dest}" mode="664" dirmode="775" username="${username}" group="ejbca"/>
    	</tar>
    	<scp trust="true" file="htdocs.tgz" todir="${username}:${password}@${publish.host}:"/>
    	<sshexec trust="true" host="${publish.host}"
				username="${username}" password="${password}"
				command="mkdir ${publish.dir} ; tar -xzpf htdocs.tgz -C ${publish.dir};"/>
		<!-- I'm setting the permissions this way as there seems to be a problem with dirmode -->
		<echo message="Setting directory permissions"/>
    	<sshexec trust="true" host="${publish.host}"
				username="${username}" password="${password}"
				command="find ${publish.dir} -type d -exec chmod 775 {} \;"/> 
		<echo message="Setting file permissions"/>
    	<sshexec trust="true" host="${publish.host}"
				username="${username}" password="${password}"
				command="find ${publish.dir} -type f -exec chmod 664 {} \;"/>
    	<delete file="htdocs.tgz"/>
    </target>
    <target name="site:publish" depends="doc" description="Publish the website to the sandbox subdirectory.">
        <property name="publish.dir" value="/home/project-web/signserver/htdocs"/>
        <property name="publish.host" value="shell.sourceforge.net"/>

        <echo message="Publish to ${publish.host}:${publish.dir}"/>
        <input message="Please enter username: " addproperty="username"/>
        <input message="Please enter password: " addproperty="password"/>
    	<tar destfile="htdocs.tgz" compression="gzip">
    		<tarfileset dir="${docs.dest}" mode="664" dirmode="775" username="${username}" group="ejbca"/>
    	</tar>
    	<scp trust="true" file="htdocs.tgz" todir="${username}:${password}@${publish.host}:"/>
    	<sshexec trust="true" host="${publish.host}"
				username="${username}" password="${password}"
				command="mkdir ${publish.dir} ; tar -xzpf htdocs.tgz -C ${publish.dir};"/>
		<!-- I'm setting the permissions this way as there seems to be a problem with dirmode -->
		<echo message="Setting directory permissions"/>
    	<sshexec trust="true" host="${publish.host}"
				username="${username}" password="${password}"
				command="find ${publish.dir} -type d -exec chmod 775 {} \;"/> 
		<echo message="Setting file permissions"/>
    	<sshexec trust="true" host="${publish.host}"
				username="${username}" password="${password}"
				command="find ${publish.dir} -type f -exec chmod 664 {} \;"/>
    	<delete file="htdocs.tgz"/>
    </target>

    

</project>