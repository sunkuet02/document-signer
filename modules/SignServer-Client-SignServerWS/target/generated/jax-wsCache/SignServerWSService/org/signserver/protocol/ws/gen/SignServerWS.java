
package org.signserver.protocol.ws.gen;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SignServerWS", targetNamespace = "gen.ws.protocol.signserver.org")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SignServerWS {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<org.signserver.protocol.ws.gen.ProcessResponseWS>
     * @throws CryptoTokenOfflineException_Exception
     * @throws InvalidWorkerIdException_Exception
     * @throws IllegalRequestException_Exception
     * @throws SignServerException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "process", targetNamespace = "gen.ws.protocol.signserver.org", className = "org.signserver.protocol.ws.gen.Process")
    @ResponseWrapper(localName = "processResponse", targetNamespace = "gen.ws.protocol.signserver.org", className = "org.signserver.protocol.ws.gen.ProcessResponse")
    public List<ProcessResponseWS> process(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<ProcessRequestWS> arg1)
        throws CryptoTokenOfflineException_Exception, IllegalRequestException_Exception, InvalidWorkerIdException_Exception, SignServerException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<org.signserver.protocol.ws.gen.WorkerStatusWS>
     * @throws InvalidWorkerIdException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStatus", targetNamespace = "gen.ws.protocol.signserver.org", className = "org.signserver.protocol.ws.gen.GetStatus")
    @ResponseWrapper(localName = "getStatusResponse", targetNamespace = "gen.ws.protocol.signserver.org", className = "org.signserver.protocol.ws.gen.GetStatusResponse")
    public List<WorkerStatusWS> getStatus(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InvalidWorkerIdException_Exception
    ;

}
