#
# $Id: signserver_deploy.properties.sample 6068 2015-06-01 14:21:18Z malu9369 $
#
# Build configuration of SignServer. Modify at will before building and 
# deploying.
# 


# ------------ Application server configuration --------------------------------

# Application server home folder
# Default: $APPSRV_HOME or $JBOSS_HOME
appserver.home=/media/sun/A4FE1C5EFE1C2AD6/SignServer/jboss
#appserver.home=/opt/jboss-eap-6.1
#appserver.home=/opt/glassfish3/glassfish/
#appserver.home=${env.APPSRV_HOME}

# Application server type
# Possible values: jboss, glassfish
# Default <auto-detect>
#appserver.type=jboss
#appserver.subtype=jbosseap6
# JBoss configuration to deploy to
# Available options are: all, default, minimal
# Default: default
#jboss.config=default

# JBoss deploy directory
# available options are: deploy, farm
# Default : deploy
#jboss.deploy=deploy

# GlassFish domain home folder
# Default: ${appserver.home}/domains/domain1
#glassfish.server.home.dir=/home/markus/.netbeans/6.7/GlassFishV2Domain


# ------------ Web GUI configuration -------------------------------------------

# Configure the web server in JBoss to use HTTPS and the specified bind address 
# and ports etc.
# Setting j2ee.web-nohttps to true skips this step.
# Default: false
# Comment out or set to false if the web server should be configured. 
# Note that you will need p12/tomcat.jks and p12/truststore.jks keystore for web server https configuration. 
# Note that if this is set to true, configurations for ports and bind addresses set in this
# file is not taken into account, neither are the default values from SignServer.
# In this case, the default configuration from JBoss will be un-altered.
j2ee.web-nohttps=true

# When upgrading, the important options are:
# - httpsserver.password

# Password for java trust keystore (p12/truststore.jks), default is changeit.
#java.trustpassword=changeit

# The password used to protect the web servers SSL keystore.
#httpsserver.password=serverpwd

# The path to the web servers SSL keystore.
# Default: p12/tomcat.jks
#httpsserver.keystore=p12/tomcat.jks

# The public port JBoss will listen to http on
# Default 8080
#httpserver.pubhttp=8080

# The public port JBoss will listen to https on, no client cert required
# Default 8442
#httpserver.pubhttps=8442

# The private port JBoss will listen to https on, client cert required
# Default 8443
#httpserver.privhttps=8443

# The interfaces JBoss will bind to. E.g. 127.0.0.1 will only allow connections from localhost.
# Default 0.0.0.0
#httpsserver.bindaddress.pubhttp=0.0.0.0
#httpsserver.bindaddress.pubhttps=0.0.0.0
#httpsserver.bindaddress.privhttps=0.0.0.0

# ------------- Database configuration -----------------------------------------

# jndi name of the datasource to use in deployment descriptors of ejbs.
# default: SignServerDS
#datasource.jndi-name=SignServerDS

# Prefix for the jndi name of the datasource to use in deployment descriptors of ejbs. 
# JBoss requires 'java:/' as prefix, while weblogic does not want anything ('') and
# GlassFish uses jdbc/
# Default: "java:/" for JBoss and "jndi/" for GlassFish
#datasource.jndi-name-prefix=java:/
#datasource.jndi-name-prefix=
#datasource.jndi-name-prefix=jdbc/

# The database name selected for deployment
# Default: hsqldb
# (use the nodb option to use a local file-based database instead of regular database, this needs further configuring of the database location).
# For MariaDB use "mysql".
#database.name=mysql
database.name=postgres
#database.name=mssql2000
#database.name=oracle
#database.name=sapdb
#database.name=sybase
#database.name=nodb

# The location of the file-based database when using the nodb database option (the example below would work for JBoss)
# the directory needs to be present, writable by the application server and empty at first startup.
#database.nodb.location=server/default/data/nodb

# Database connection URL.
# This is the URL used to connect to the database, used to configure a new datasource in JBoss.
# Default: jdbc:hsqldb:${jboss.server.data.dir}${/}hypersonic${/}SignServerLocalDB
# MySQL/MariaDB standard:
#database.url=jdbc:mysql://127.0.0.1:3306/signserver?characterEncoding=UTF-8
# Mysql Clusters should use something like:
#database.url=jdbc:mysql://host1,host2/signserver
#database.url=jdbc:mysql://192.168.1.15,192.168.1.18/signserver
database.url=jdbc:postgresql://127.0.0.1/signserver
#database.url=jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=signserver
#database.url=jdbc:oracle:thin:@127.0.0.1:1521:xe
#database.url=jdbc:datadirect:oracle://127.0.0.1:1521;SID=signserver

#Uncomment the follwing setting if you are using MySQL cluster. Leave it commented otherwise.
#database.use.mysqlcluster=true

# JDBC driver classname.
# The JEE server needs to be configured with the appropriate JDBC driver for
# the selected database
# Default: org.hsqldb.jdbcDriver
#database.driver=org.mariadb.jdbc.Driver
#database.driver=com.mysql.jdbc.Driver
database.driver=org.postgresql.Driver
#database.driver=com.microsoft.jdbc.sqlserver.SQLServerDriver
#database.driver=oracle.jdbc.driver.OracleDriver
#database.driver=com.ddtek.jdbc.oracle.OracleDriver

# Database username.
# Default: sa (works with hsqldb)
database.username=postgres

# Database password.
# Default: (blank works with hsqldb)
database.password=tigerit


# -------------- Web Services Configuration ------------------------------------
#
# Set to false to disable Main WebService deployment. 
# If set to false you must also disable the validationclient and signingandvalidationapi modules below.
#signserverws.enabled=true

# Set to true to enable the Generic WS API
# Default true
#genericws.enabled=true

# Set to true to enable Validation WebService deployment
# Default false
#validationws.enabled=false

# Set to true to enable Admin WebService deployment.
# Default true
#adminws.enabled=true

# Set to true to enable Client WebService deployment.
# Default true
#clientws.enabled=true


# -------------- Modules Configurations ----------------------------------------
#

# Include all modules in build. Set to true to enable all modules.
#
# Default: true
includemodulesinbuild=false

# Include Log4j configuration in EAR (not needed for JBoss)
# Default: false
module.log4j.enabled=true

# Module Renewal
# Default: false
module.renewal.enabled=true

# Module XMLSigner
# Default: true
module.xmlsigner.enabled=false

# Module XMLValidator
# Default: true
module.xmlvalidator.enabled=false

# Module XAdES
# Default: true
module.xades.enabled=false

# Module CMSSigner
# Default: true
#module.cmssigner.enabled=true

# Module ODFSigner
# Default: true
module.odfsigner.enabled=false

# Module OOXMLSigner
# Default: true
module.ooxmlsigner.enabled=false

# Module PDFSigner
# Default: true
module.pdfsigner.enabled=false

# Module TSA
# Default: true
module.tsa.enabled=false

# Module MRTDSODSigner
# Default: true
#module.mrtdsodsigner.enabled=true

# Module MRTDSigner
# Default: true
module.mrtdsigner.enabled=false

# Module StatusProperties
# Default: false
#module.statusproperties.enabled=false

# Module SignerStatusReport
# Default: false
#module.signerstatusreport.enabled=false


# -------------- Client Configurations -----------------------------------------
#
# Set to true to enable build of the TimeStampClient
#
# Default: true
timestampclient.enabled=false

# Set to true to enable build of the validation client.
# For this to build must also signserverws.enabled be set
# to true.
#
# Default: true
#validationclient.enabled=true

# Set to true to enable the PDF performance test client
# Default: false
#pdfperformancetest.enabled=false

# Set to true to enable build of the SigningAndValidationAPI.
# For this to build must also signserverws.enabled be set
# to true.
#
# Default: true
signingandvalidationapi.enabled=false

# Set to enable build of the AdminGUI
# Default: true
admingui.enabled=false

# Set to enable build of the ClientCLI
# Default: true
#clientcli.enabled=true

# Set to enable build of the Database CLI (Enterprise Edition only)
# Default: true
#databasecli.enabled=true

# Set to enable build of the TimeMonitor (Enterprise Edition only)
# Default: false
#timemonitor.enabled=false

# -------------- Additional Web Deployments -----------------------------------

# Deploy the documentation.
#
# Default: true
webdoc.enabled=true

# Offer the AdminGUI binary dist for download from the public web
# Note: If enabled the following configuration files will also be part of the 
# download:
# - conf/admingui_default.properties
# - conf/log4.properties
# - doc/sample-configs/*.properties
#
# The ZIP file is created as part of the compose-ear (deploy) Ant target.
#
# Default: false
#web.admingui.dist.enabled=false

# Path to the AdminGUI binary dist file
# Default: ${basedir}/lib/signserver-admingui.zip
#web.admingui.dist.file=${basedir}/lib/signserver-admingui.zip
#web.admingui.dist.file=/tmp/signserver-admingui.zip


# -------------- Status And Health Check Configuration -------------------------
#
# Parameters configuring how health check and status should be
# configured.
# Sample url: http://localhost:8080/signserver/healthcheck/signserverhealth
#
# Setting specifying which remote IPs that may call this healthcheck servlet. Use ';' for between multiple IPs.
# If the setting contains the keyword ANY, access is granted from any IP address.
# Default : 127.0.0.1;::1;0:0:0:0:0:0:0:1
#healthcheck.authorizedips=127.0.0.1;::1;0:0:0:0:0:0:0:1

# Parameter to set the number of Mega Bytes of memory that must be free before removing     
# the node out of the cluster.
# Default : 1
#healthcheck.minimumfreememory=1

# Parameter indicating the string that should be used to do 
# a minimal check that the database is working. May differ between databases.
# Default : Select count(*) from signerconfigdata
#healthcheck.checkdbstring=Select count(*) from signerconfigdata

# Parameter to specify location of file containing information about maintenance
# Use this file to specify weather to include node in healthcheck or report as down for maintenance, 
# which will return an error message in the format "MAINT: <property name>",
# where <property name> is the property name specified below.
# Default: empty (not used)
#healthcheck.maintenancefile=maintenance.properties

# Parameter to configure name of maintenance property, default = DOWN_FOR_MAINTENANCE
# The healthcheck.maintenancefile should contain a single line like this:
# DOWN_FOR_MAINTENANCE=true
# Where the node will be down for maintenance if the property is true, and not down for maintenance if the property is false.
# Default: DOWN_FOR_MAINTENANCE
#healthcheck.maintenancepropertyname=DOWN_FOR_MAINTENANCE


# ------------- Status Repository Configuration --------------------------------

# Status Repository Audit Logging
#
# The following options are possible:
#   ALL (default):  All updates are logged (even if the value did not change).
#   CHANGES:        Only updates where the value is changed are logged.
#   NONE:           No updates are logged.
#statusrepository.log=ALL

# ------------- PKCS11 library definitions -------------------------------------
#
# PKCS11 library definitions, each library is defined by a "friendly" name (the one
# used for the SHAREDLIBRARYNAME property of a crypto worker) and a libray path.
# Only library paths that actually exists on the file system is added to the list.
# The valid indexes is from 0 to 255.
# For security reasons it is possible to disable the built-in definitions by
# removing the # sign in front of a definition and set the file parameter to
# an empty string.

#cryptotoken.p11.lib.0.name=SoftHSM
#cryptotoken.p11.lib.0.file=/usr/lib/softhsm/libsofthsm.so
#cryptotoken.p11.lib.10.name=SafeNet ProtectServer Gold Emulator
#cryptotoken.p11.lib.10.file=/opt/ETcpsdk/lib/linux-x86_64/libctsw.so
#cryptotoken.p11.lib.11.name=SafeNet ProtectServer Gold
#cryptotoken.p11.lib.11.file=/opt/ETcpsdk/lib/linux-x86_64/libcryptoki.so
#cryptotoken.p11.lib.20.name=SafeNet Luna SA
#cryptotoken.p11.lib.20.file=/usr/lunasa/lib/libCryptoki2_64.so
#cryptotoken.p11.lib.21.name=SafeNet Luna PCI
#cryptotoken.p11.lib.21.file=/usr/lunapci/lib/libCryptoki2_64.so
#cryptotoken.p11.lib.22.name=SafeNet Luna PCI
#cryptotoken.p11.lib.22.file=/Program Files/LunaPCI/cryptoki.dll
cryptotoken.p11.lib.30.name=Utimaco
cryptotoken.p11.lib.30.file=/media/sun/A4FE1C5EFE1C2AD6/SignServer/signserver/edited/lib/libcs_pkcs11_R2.so
#cryptotoken.p11.lib.31.name=Utimaco
#cryptotoken.p11.lib.31.file=/opt/Utimaco/Software/PKCS11/lib/Linux-x86-64/libcs2_pkcs11.so
#cryptotoken.p11.lib.32.name=Utimaco
#cryptotoken.p11.lib.32.file=/etc/utimaco/libcs2_pkcs11.so
#cryptotoken.p11.lib.33.name=Utimaco
#cryptotoken.p11.lib.33.file=C:/Program Files/Utimaco/SafeGuard CryptoServer/Lib/cs2_pkcs11.dll
#cryptotoken.p11.lib.40.name=nCipher
#cryptotoken.p11.lib.40.file=/opt/nfast/toolkits/pkcs11/libcknfast.so
#cryptotoken.p11.lib.50.name=ARX CoSign
#cryptotoken.p11.lib.50.file=C:/windows/system32/sadaptor.dll
#cryptotoken.p11.lib.60.name=OpenSC
#cryptotoken.p11.lib.60.file=/usr/lib/x86_64-linux-gnu/opensc-pkcs11.so
#cryptotoken.p11.lib.61.name=OpenSC
#cryptotoken.p11.lib.61.file=/usr/lib/i386-linux-gnu/opensc-pkcs11.so
#cryptotoken.p11.lib.62.name=OpenSC
#cryptotoken.p11.lib.62.file=/usr/local/lib/opensc-pkcs11.so
#cryptotoken.p11.lib.63.name=OpenSC
#cryptotoken.p11.lib.63.file=C:/Windows/system32/opensc-pkcs11.dll
