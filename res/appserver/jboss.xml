<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================= -->
<!--                                                                         -->
<!--  SignServer: The OpenSource Automated Signing Server                    -->
<!--                                                                         -->
<!--  This software is free software; you can redistribute it and/or         -->
<!--  modify it under the terms of the GNU Lesser General Public             -->
<!--  License as published by the Free Software Foundation; either           -->
<!--  version 2.1 of the License, or any later version.                      -->
<!--                                                                         -->
<!--  See terms of license at gnu.org.                                       -->
<!--                                                                         -->
<!-- ======================================================================= -->
<!-- Version: $Id: compile.xml 5341 2014-10-29 17:02:47Z netmackan $ -->

<!-- Extra JBoss deploymet functionality. -->
<project name="signserver-jboss" basedir=".." default="j2ee:deploy">

	<!--
	 Do not configure the servlet container, deploys blindly ears
	 This is ideally passed by the caller and is just here as a reminder
	  -->
	<!--property name="j2ee.web-noconfigure" value="true"/-->
	
	
    <target name="jboss:check">
        <condition property="configure.web">
            <and>
                <equals arg1="${appserver.subtype}" arg2="jboss5" />
                <not>
                    <istrue value="${j2ee.web-nohttps}"/> <!-- XXX: Duplicated from build.xml, better use existing condition property j2ee.web-nohttps.condition but already spent to much time on Ant not getting it to work... -->
                </not>
            </and>
        </condition>
        <condition property="configure.ds">
            <and>
                <equals arg1="${appserver.subtype}" arg2="jboss5" />
                <not>
                    <equals arg1="${database.name}" arg2="nodb"/> <!-- XXX: Duplicated from build.xml, better use existing condition property noDB but already spent to much time on Ant not getting it to work.. -->
                </not>
            </and>
        </condition>
    </target>

    <!-- Currently for JBoss 5 we also can deploy other things like datastore and keystores. -->
    <target name="j2ee:deploy-other" depends="jboss:check,j2ee:configure, j2ee:web-configure, j2ee:copyPrimeCardJars, j2ee:compile-ds, j2ee:copyDS"/>

    <target name="j2ee:compile-ds" depends="j2ee:compile-nocluster-ds"/>

    <target name="j2ee:compile-nocluster-ds" unless="database.use.mysqlcluster">
    	<copy todir="${tmp}" overwrite="true">
            <fileset dir="res/appserver/jboss">
            	<include name="signserver-ds.xml"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain> 		
        </copy>	
	</target>

        <target name="j2ee:deploytruststore" unless="jboss7">
		<!-- copy the truststore file to the server -->
		<available file="${truststore.keystore}" property="truststore.file.present"/>
		<fail message="Missing JKS truststorestore file in 'truststore.keystore'" unless="truststore.file.present"/>
		<condition property="javatrust.password.present">
			<isset property="java.trustpassword"/> 
		</condition>
		<fail message="Missing Truststore password '${java.trustpassword}'" unless="javatrust.password.present"/>
		
		<copy file="${truststore.keystore}" tofile="${appserver.home}/server/${jboss.config}/${truststore.file}" overwrite="true"/>
		<chmod file="${appserver.home}/server/${jboss.config}/${truststore.file}" perm="600"/>
	</target>

        <target name="j2ee:web-configure"  if="configure.web"  description="Configure the servlet container">
        <echo message="Using JBoss deploy directory ${jboss.deploy.dir}"/>

		<!-- copy the keystore file to the server -->
		<available file="${httpsserver.keystore}" property="keystore.file.present"/>
		<fail message="Missing JKS keystore file in '${basedir}/${httpsserver.keystore}'" unless="keystore.file.present"/>
		<condition property="httpsserver.password.present">
			<isset property="httpsserver.password"/> 
		</condition>
		<fail message="Missing JKS password '${httpsserver.password}'" unless="httpsserver.password.present"/>

		<copy file="${httpsserver.keystore}" tofile="${appserver.home}/server/${jboss.config}/${keystore.file}"/>
        <!-- detect jboss web version -->
        <available file="${jboss.deploy.dir}/jbossweb-tomcat55.sar" type="dir" property="jboss.web" value="tomcat55"/>
        <available file="${jboss.deploy.dir}/jboss-web.deployer" type="dir" property="jboss.web" value="tomcat60"/>
        <available file="${jboss.deploy.dir}/jbossweb.sar" type="dir" property="jboss.web" value="tomcat60jboss5"/>
        <fail message="Could not detect JBoss Servlet container version" unless="jboss.web"/>
		
		<!-- Also deploy the truststore -->
        <antcall target="j2ee:deploytruststore" />
		
		<!-- configure the tomcat bundle -->
		<!-- For JBoss 4.0.x tomcat is bundled in jbossweb-tomcat55.sar dir -->
        <available file="${jboss.deploy.dir}/jbossweb-${jboss.web}.sar" type="dir" property="tomcat.dir" value="${jboss.deploy.dir}/jbossweb-${jboss.web}.sar"/>
		<!-- For JBoss 4.2.x tomcat is bundled in jboss-web.deployer dir, i.e. new naming scheme -->
        <available file="${jboss.deploy.dir}/jboss-web.deployer" type="dir" property="tomcat.dir" value="${jboss.deploy.dir}/jboss-web.deployer"/>
        <available file="${jboss.deploy.dir}/jbossweb.sar" type="dir" property="tomcat.dir" value="${jboss.deploy.dir}/jbossweb.sar"/>
        <copy todir="${tomcat.dir}" overwrite="true">
			<fileset dir="res/appserver/jboss/${jboss.web}"/>
			<filterchain>
			<tokenfilter>
		    	<replacestring from="@keystore.file@" to="${keystore.file}"/>
		    	<replacestring from="@httpsserver.password@" to="${httpsserver.password}"/>
				<replacestring from="@truststore.file@" to="${truststore.file}"/>
				<replacestring from="@java.trustpassword@" to="${java.trustpassword}"/>
		    	<replacestring from="@httpserver.pubhttp@" to="${httpserver.pubhttp}"/>
		    	<replacestring from="@httpserver.pubhttps@" to="${httpserver.pubhttps}"/>
		    	<replacestring from="@httpserver.privhttps@" to="${httpserver.privhttps}"/>
		    	<replacestring from="@web.contentencoding@" to="${web.contentencoding}"/>
                <replacestring from="@httpsserver.bindaddress.pubhttp@" to="${httpsserver.bindaddress.pubhttp}"/>
                <replacestring from="@httpsserver.bindaddress.pubhttps@" to="${httpsserver.bindaddress.pubhttps}"/>
                <replacestring from="@httpsserver.bindaddress.privhttps@" to="${httpsserver.bindaddress.privhttps}"/>
			</tokenfilter>
			</filterchain>
        </copy>
        
	</target>
	
	<target name="j2ee:copyPrimeCardJars" description="Deploy the application"  if="primeCard.home"  >
    	<copy todir="${jboss.deploy.dir}">	
    		<fileset dir="${server.dist.dir}" includes="rmiclientsslsignservice.jar"/>
    	</copy>
    	<copy todir="${jboss.server.home.dir}/deploy">	
    		<fileset dir="${src.appserver}" includes="rmiclientsslsign-service.xml"/> 
    	</copy>
      <copy todir="${jboss.lib.dir}">
    		        	<!-- PrimeCAToken Specific Libs -->
            <fileset dir="${tmp}/lib">     
                <include name="base-core.jar" />
                <include name="base-opt.jar" />
                <include name="pcscOCFTerminal.jar" />
                <include name="pkcs15.jar" />
                <include name="securityProvider.jar" />
                <include name="smartCard.jar" />
                <include name="keyStoreContainer.jar" />
            	<include name="utilsForRMISSL.jar" />
            </fileset>
    	</copy>	
	</target>

	<target name="j2ee:copyDS" description="Deploy signserver-ds.xml" if="configure.ds">
		<echo>
Copying ${tmp}/signserver-ds.xml to ${jboss.deploy.dir}
		</echo>
		<copy todir="${jboss.deploy.dir}" overwrite="true" failonerror="true">
			<fileset dir="${tmp}">
		    	<include name="signserver-ds.xml"/>
		    </fileset>	
		</copy>
	</target>


    <target name="j2ee:copy-xmlsec" description="Copy XML Security JARs to JBoss endorsed folder">
        <echo>
Upgrading XML Security JAR files in JBoss endorsed folder with versions from SignServer
        </echo>
            
        <!-- $ cp lib/ext/xml-security/*.jar /opt/jboss-5.1.0.GA/lib/endorsed/ -->
        <copy file="${base}/lib/ext/serializer-2.7.2.jar" tofile="${appserver.home}/lib/endorsed/serializer-signserver.jar" overwrite="true" failonerror="true" verbose="true"/>
        <copy file="${base}/lib/ext/xalan-2.7.2.jar" tofile="${appserver.home}/lib/endorsed/xalan-signserver.jar" overwrite="true" failonerror="true" verbose="true"/>
        <copy file="${base}/lib/ext/xercesImpl-2.9.1.jar" tofile="${appserver.home}/lib/endorsed/xercesImpl-signserver.jar" overwrite="true" failonerror="true" verbose="true"/>
        <copy file="${base}/lib/ext/xmlsec-1.5.8.jar" tofile="${appserver.home}/lib/endorsed/xmlsec-signserver.jar" overwrite="true" failonerror="true" verbose="true"/>

        <!-- $ cp lib/ext/commons-logging-1.1.1.jar lib/ext/log4j-1.2.14.jar /opt/jboss-5.1.0.GA/lib/endorsed/ -->
        <copy file="${base}/lib/ext/commons-logging-1.1.1.jar" tofile="${appserver.home}/lib/endorsed/commons-logging-signserver.jar" overwrite="true" failonerror="true" verbose="true"/>
        <!-- $ cp lib/ext/log4j-1.2.14.jar lib/ext/log4j-1.2.14.jar /opt/jboss-5.1.0.GA/lib/endorsed/ -->
        <copy file="${base}/lib/ext/log4j-1.2.14.jar" tofile="${appserver.home}/lib/endorsed/log4j-signserver.jar" overwrite="true" failonerror="true" verbose="true"/>
        
        <echo>Removing older versions if available (ignore warnings about missing files)</echo>        
        <!-- $ rm /opt/jboss-5.1.0.GA/lib/endorsed/serializer.jar -->
        <move file="${appserver.home}/lib/endorsed/serializer.jar" tofile="${appserver.home}/lib/endorsed/serializer.jar.signserver-disabled" overwrite="true" failonerror="false" verbose="false"/>
        
        <!-- $ rm /opt/jboss-5.1.0.GA/lib/endorsed/xercesImpl.jar -->
        <move file="${appserver.home}/lib/endorsed/xercesImpl.jar" tofile="${appserver.home}/lib/endorsed/xercesImpl.jar.signserver-disabled" overwrite="true" failonerror="false" verbose="false"/>
        
        <!-- $ rm /opt/jboss-5.1.0.GA/lib/endorsed/xalan.jar -->
        <move file="${appserver.home}/lib/endorsed/xalan.jar" tofile="${appserver.home}/lib/endorsed/xalan.jar.signserver-disabled" overwrite="true" failonerror="false" verbose="false"/>
    
        <!-- $ rm /opt/jboss-5.1.0.GA/lib/endorsed/commons-logging.jar -->
        <move file="${appserver.home}/lib/endorsed/commons-logging.jar" tofile="${appserver.home}/lib/endorsed/commons-logging.jar.signserver-disabled" overwrite="true" failonerror="false" verbose="false"/>
        
        <!-- $ rm /opt/jboss-5.1.0.GA/lib/endorsed/log4j.jar -->
        <move file="${appserver.home}/lib/endorsed/log4j.jar" tofile="${appserver.home}/lib/endorsed/log4j.jar.signserver-disabled" overwrite="true" failonerror="false" verbose="false"/>
        
        <!-- $ rm /opt/jboss-5.1.0.GA/lib/endorsed/xmlsec.jar -->
        <move file="${appserver.home}/lib/endorsed/xmlsec.jar" tofile="${appserver.home}/lib/endorsed/xmlsec.jar.signserver-disabled" overwrite="true" failonerror="false" verbose="false"/>
        
    </target>

</project>

